; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	c:\odzhan\kuznechik\kuznechik.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_kuz_pi
CONST	SEGMENT
_kuz_pi	DB	0fcH
	DB	0eeH
	DB	0ddH
	DB	011H
	DB	0cfH
	DB	06eH
	DB	031H
	DB	016H
	DB	0fbH
	DB	0c4H
	DB	0faH
	DB	0daH
	DB	023H
	DB	0c5H
	DB	04H
	DB	04dH
	DB	0e9H
	DB	077H
	DB	0f0H
	DB	0dbH
	DB	093H
	DB	02eH
	DB	099H
	DB	0baH
	DB	017H
	DB	036H
	DB	0f1H
	DB	0bbH
	DB	014H
	DB	0cdH
	DB	05fH
	DB	0c1H
	DB	0f9H
	DB	018H
	DB	065H
	DB	05aH
	DB	0e2H
	DB	05cH
	DB	0efH
	DB	021H
	DB	081H
	DB	01cH
	DB	03cH
	DB	042H
	DB	08bH
	DB	01H
	DB	08eH
	DB	04fH
	DB	05H
	DB	084H
	DB	02H
	DB	0aeH
	DB	0e3H
	DB	06aH
	DB	08fH
	DB	0a0H
	DB	06H
	DB	0bH
	DB	0edH
	DB	098H
	DB	07fH
	DB	0d4H
	DB	0d3H
	DB	01fH
	DB	0ebH
	DB	034H
	DB	02cH
	DB	051H
	DB	0eaH
	DB	0c8H
	DB	048H
	DB	0abH
	DB	0f2H
	DB	02aH
	DB	068H
	DB	0a2H
	DB	0fdH
	DB	03aH
	DB	0ceH
	DB	0ccH
	DB	0b5H
	DB	070H
	DB	0eH
	DB	056H
	DB	08H
	DB	0cH
	DB	076H
	DB	012H
	DB	0bfH
	DB	072H
	DB	013H
	DB	047H
	DB	09cH
	DB	0b7H
	DB	05dH
	DB	087H
	DB	015H
	DB	0a1H
	DB	096H
	DB	029H
	DB	010H
	DB	07bH
	DB	09aH
	DB	0c7H
	DB	0f3H
	DB	091H
	DB	078H
	DB	06fH
	DB	09dH
	DB	09eH
	DB	0b2H
	DB	0b1H
	DB	032H
	DB	075H
	DB	019H
	DB	03dH
	DB	0ffH
	DB	035H
	DB	08aH
	DB	07eH
	DB	06dH
	DB	054H
	DB	0c6H
	DB	080H
	DB	0c3H
	DB	0bdH
	DB	0dH
	DB	057H
	DB	0dfH
	DB	0f5H
	DB	024H
	DB	0a9H
	DB	03eH
	DB	0a8H
	DB	043H
	DB	0c9H
	DB	0d7H
	DB	079H
	DB	0d6H
	DB	0f6H
	DB	07cH
	DB	022H
	DB	0b9H
	DB	03H
	DB	0e0H
	DB	0fH
	DB	0ecH
	DB	0deH
	DB	07aH
	DB	094H
	DB	0b0H
	DB	0bcH
	DB	0dcH
	DB	0e8H
	DB	028H
	DB	050H
	DB	04eH
	DB	033H
	DB	0aH
	DB	04aH
	DB	0a7H
	DB	097H
	DB	060H
	DB	073H
	DB	01eH
	DB	00H
	DB	062H
	DB	044H
	DB	01aH
	DB	0b8H
	DB	038H
	DB	082H
	DB	064H
	DB	09fH
	DB	026H
	DB	041H
	DB	0adH
	DB	045H
	DB	046H
	DB	092H
	DB	027H
	DB	05eH
	DB	055H
	DB	02fH
	DB	08cH
	DB	0a3H
	DB	0a5H
	DB	07dH
	DB	069H
	DB	0d5H
	DB	095H
	DB	03bH
	DB	07H
	DB	058H
	DB	0b3H
	DB	040H
	DB	086H
	DB	0acH
	DB	01dH
	DB	0f7H
	DB	030H
	DB	037H
	DB	06bH
	DB	0e4H
	DB	088H
	DB	0d9H
	DB	0e7H
	DB	089H
	DB	0e1H
	DB	01bH
	DB	083H
	DB	049H
	DB	04cH
	DB	03fH
	DB	0f8H
	DB	0feH
	DB	08dH
	DB	053H
	DB	0aaH
	DB	090H
	DB	0caH
	DB	0d8H
	DB	085H
	DB	061H
	DB	020H
	DB	071H
	DB	067H
	DB	0a4H
	DB	02dH
	DB	02bH
	DB	09H
	DB	05bH
	DB	0cbH
	DB	09bH
	DB	025H
	DB	0d0H
	DB	0beH
	DB	0e5H
	DB	06cH
	DB	052H
	DB	059H
	DB	0a6H
	DB	074H
	DB	0d2H
	DB	0e6H
	DB	0f4H
	DB	0b4H
	DB	0c0H
	DB	0d1H
	DB	066H
	DB	0afH
	DB	0c2H
	DB	039H
	DB	04bH
	DB	063H
	DB	0b6H
CONST	ENDS
PUBLIC	_kuz_init
; Function compile flags: /Ogspy
;	COMDAT _kuz_init
_TEXT	SEGMENT
_key$ = 8						; size = 4
_kuz_init PROC						; COMDAT
; File c:\odzhan\kuznechik\kuznechik.c
; Line 70
	push	esi
	push	edi
; Line 73
	mov	edi, DWORD PTR _key$[esp+4]
	mov	esi, edi
	xor	ecx, ecx
	sub	esi, OFFSET _kuz_pi
$LL3@kuz_init:
; Line 74
	mov	dl, BYTE PTR _kuz_pi[ecx]
	mov	BYTE PTR _kuz_pi[esi+ecx+256], dl
; Line 75
	movzx	eax, BYTE PTR _kuz_pi[ecx]
	mov	BYTE PTR [eax+edi+512], cl
	inc	ecx
	cmp	ecx, 256				; 00000100H
	jl	SHORT $LL3@kuz_init
; Line 77
	pop	edi
	pop	esi
	ret	0
_kuz_init ENDP
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT _kuz_mul_gf256
_TEXT	SEGMENT
_y$ = 8							; size = 1
_kuz_mul_gf256 PROC					; COMDAT
; _x$ = ecx
; Line 85
	xor	al, al
; Line 87
	cmp	BYTE PTR _y$[esp-4], al
	je	SHORT $LN2@kuz_mul_gf
$LL3@kuz_mul_gf:
; Line 88
	test	BYTE PTR _y$[esp-4], 1
	je	SHORT $LN1@kuz_mul_gf
; Line 89
	xor	al, cl
$LN1@kuz_mul_gf:
; Line 91
	mov	dl, cl
	and	dl, 128					; 00000080H
	neg	dl
	sbb	dl, dl
	and	dl, 195					; 000000c3H
	add	cl, cl
	xor	cl, dl
; Line 92
	shr	BYTE PTR _y$[esp-4], 1
	jne	SHORT $LL3@kuz_mul_gf
$LN2@kuz_mul_gf:
; Line 95
	ret	0
_kuz_mul_gf256 ENDP
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT _kuz_lt
_TEXT	SEGMENT
_kuz_lvec$ = -28					; size = 16
tv442 = -12						; size = 4
tv425 = -8						; size = 4
_i$ = -8						; size = 4
_x$ = -1						; size = 1
_enc$ = 8						; size = 4
_kuz_lt	PROC						; COMDAT
; _w$ = ebx
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 28					; 0000001cH
	push	esi
	push	edi
; Line 112
	lea	edi, DWORD PTR _kuz_lvec$[ebp]
	mov	DWORD PTR _kuz_lvec$[ebp], 277160084	; 10852094H
	mov	DWORD PTR _kuz_lvec$[ebp+4], -83771198	; fb01c0c2H
	mov	DWORD PTR _kuz_lvec$[ebp+8], 281198593	; 10c2c001H
	mov	DWORD PTR _kuz_lvec$[ebp+12], 26484869	; 01942085H
	sub	edi, ebx
	mov	DWORD PTR tv442[ebp], 16		; 00000010H
$LL11@kuz_lt:
; Line 117
	cmp	DWORD PTR _enc$[ebp], 0
	jne	SHORT $LN8@kuz_lt
; Line 120
	mov	al, BYTE PTR [ebx+15]
	mov	BYTE PTR _x$[ebp], al
; Line 122
	mov	DWORD PTR _i$[ebp], 14			; 0000000eH
	lea	esi, DWORD PTR [ebx+14]
$LL7@kuz_lt:
; Line 124
	movzx	eax, BYTE PTR [edi+esi]
	mov	cl, BYTE PTR [esi]
	push	eax
	mov	BYTE PTR [esi+1], cl
	call	_kuz_mul_gf256
	xor	BYTE PTR _x$[ebp], al
	dec	DWORD PTR _i$[ebp]
	dec	esi
	cmp	DWORD PTR _i$[ebp], 0
	pop	ecx
	jge	SHORT $LL7@kuz_lt
; Line 126
	mov	al, BYTE PTR _x$[ebp]
	mov	BYTE PTR [ebx], al
; Line 127
	jmp	SHORT $LN10@kuz_lt
$LN8@kuz_lt:
; Line 128
	mov	al, BYTE PTR [ebx]
	mov	BYTE PTR _x$[ebp], al
	mov	eax, ebx
	mov	DWORD PTR tv425[ebp], 15		; 0000000fH
$LL3@kuz_lt:
; Line 131
	lea	esi, DWORD PTR [eax+1]
	mov	cl, BYTE PTR [esi]
	mov	BYTE PTR [eax], cl
; Line 132
	movzx	eax, BYTE PTR [eax+edi]
	push	eax
	call	_kuz_mul_gf256
	xor	BYTE PTR _x$[ebp], al
	dec	DWORD PTR tv425[ebp]
	pop	ecx
	mov	eax, esi
	jne	SHORT $LL3@kuz_lt
; Line 134
	mov	al, BYTE PTR _x$[ebp]
	mov	BYTE PTR [ebx+15], al
$LN10@kuz_lt:
; Line 115
	dec	DWORD PTR tv442[ebp]
	jne	SHORT $LL11@kuz_lt
	pop	edi
	pop	esi
; Line 137
	leave
	ret	0
_kuz_lt	ENDP
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT _kuz_whiten
_TEXT	SEGMENT
_key$ = 8						; size = 4
_kuz_whiten PROC					; COMDAT
; _w$ = ecx
; _idx$ = eax
; Line 142
	shl	eax, 4
	add	eax, DWORD PTR _key$[esp-4]
	push	4
	pop	edx
; Line 144
	sub	eax, ecx
	push	esi
$LL3@kuz_whiten:
; Line 145
	mov	esi, DWORD PTR [eax+ecx]
	xor	DWORD PTR [ecx], esi
	add	ecx, 4
	dec	edx
	jne	SHORT $LL3@kuz_whiten
	pop	esi
; Line 147
	ret	0
_kuz_whiten ENDP
; Function compile flags: /Ogspy
_TEXT	ENDS
;	COMDAT _kuz_subbytes
_TEXT	SEGMENT
_w$ = 8							; size = 4
_enc$ = 12						; size = 4
_kuz_subbytes PROC					; COMDAT
; _key$ = eax
; Line 152
	xor	ecx, ecx
	push	esi
	lea	esi, DWORD PTR [eax+256]
	cmp	DWORD PTR _enc$[esp], ecx
	je	SHORT $LL7@kuz_subbyt
	lea	esi, DWORD PTR [eax+512]
$LL7@kuz_subbyt:
; Line 154
	mov	eax, DWORD PTR _w$[esp]
; Line 155
	movzx	edx, BYTE PTR [eax+ecx]
	mov	dl, BYTE PTR [edx+esi]
	mov	BYTE PTR [eax+ecx], dl
	inc	ecx
	cmp	ecx, 16					; 00000010H
	jl	SHORT $LL7@kuz_subbyt
	pop	esi
; Line 157
	ret	0
_kuz_subbytes ENDP
_TEXT	ENDS
PUBLIC	_kuz_setkey
; Function compile flags: /Ogspy
;	COMDAT _kuz_setkey
_TEXT	SEGMENT
_x$ = -68						; size = 32
_c$ = -36						; size = 16
_z$ = -20						; size = 16
_i$ = -4						; size = 4
_kuz$ = 8						; size = 4
_key$ = 12						; size = 4
_kuz_setkey PROC					; COMDAT
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 68					; 00000044H
	push	ebx
	push	esi
	push	edi
; Line 166
	mov	edi, DWORD PTR _kuz$[ebp]
	push	edi
	call	_kuz_init
; Line 169
	mov	esi, DWORD PTR _key$[ebp]
	pop	ecx
	push	32					; 00000020H
	pop	ecx
	rep movsb
; Line 172
	mov	esi, DWORD PTR _key$[ebp]
	push	32					; 00000020H
	lea	edi, DWORD PTR _x$[ebp]
	pop	ecx
	rep movsb
; Line 174
	mov	DWORD PTR _i$[ebp], 1
$LL19@kuz_setkey:
; Line 176
	push	16					; 00000010H
	xor	al, al
	pop	ecx
	lea	edi, DWORD PTR _c$[ebp]
	rep stosb
; Line 177
	mov	al, BYTE PTR _i$[ebp]
; Line 179
	xor	esi, esi
	push	esi
	lea	ebx, DWORD PTR _c$[ebp]
	mov	BYTE PTR _c$[ebp+15], al
	call	_kuz_lt
	pop	ecx
; Line 181
	xor	eax, eax
$LL7@kuz_setkey:
; Line 182
	mov	cl, BYTE PTR _c$[ebp+eax]
	xor	cl, BYTE PTR _x$[ebp+eax]
	inc	eax
	mov	BYTE PTR _z$[ebp+eax-1], cl
	cmp	eax, 16					; 00000010H
	jb	SHORT $LL7@kuz_setkey
; Line 185
	lea	eax, DWORD PTR _z$[ebp]
	push	esi
	push	eax
	mov	eax, DWORD PTR _kuz$[ebp]
	call	_kuz_subbytes
; Line 186
	push	esi
	lea	ebx, DWORD PTR _z$[ebp]
	call	_kuz_lt
	add	esp, 12					; 0000000cH
; Line 188
	xor	eax, eax
$LL4@kuz_setkey:
; Line 189
	mov	cl, BYTE PTR _x$[ebp+eax+16]
	xor	BYTE PTR _z$[ebp+eax], cl
	inc	eax
	cmp	eax, 16					; 00000010H
	jb	SHORT $LL4@kuz_setkey
; Line 195
	test	BYTE PTR _i$[ebp], 7
	push	16					; 00000010H
	pop	ecx
	lea	esi, DWORD PTR _x$[ebp]
	lea	edi, DWORD PTR _x$[ebp+16]
	rep movsb
	push	16					; 00000010H
	lea	esi, DWORD PTR _z$[ebp]
	lea	edi, DWORD PTR _x$[ebp]
	pop	ecx
	rep movsb
	jne	SHORT $LN9@kuz_setkey
; Line 196
	mov	edi, DWORD PTR _i$[ebp]
	shr	edi, 2
	shl	edi, 4
	add	edi, DWORD PTR _kuz$[ebp]
	push	32					; 00000020H
	lea	esi, DWORD PTR _x$[ebp]
	pop	ecx
	rep movsb
$LN9@kuz_setkey:
; Line 174
	inc	DWORD PTR _i$[ebp]
	cmp	DWORD PTR _i$[ebp], 32			; 00000020H
	jbe	$LL19@kuz_setkey
	pop	edi
	pop	esi
	pop	ebx
; Line 199
	leave
	ret	0
_kuz_setkey ENDP
_TEXT	ENDS
PUBLIC	_kuz_encrypt
; Function compile flags: /Ogspy
;	COMDAT _kuz_encrypt
_TEXT	SEGMENT
_key$ = 8						; size = 4
_blk$ = 12						; size = 4
_enc$ = 16						; size = 4
_kuz_encrypt PROC					; COMDAT
; Line 203
	push	ebp
	mov	ebp, esp
	push	ebx
; Line 209
	mov	ebx, DWORD PTR _blk$[ebp]
	push	esi
	mov	esi, DWORD PTR _key$[ebp]
	push	edi
	xor	edi, edi
	sub	esi, ebx
	cmp	DWORD PTR _enc$[ebp], edi
	jne	SHORT $LN8@kuz_encryp
$LL7@kuz_encryp:
; Line 212
	push	4
	mov	eax, ebx
	pop	ecx
$LL13@kuz_encryp:
	mov	edx, DWORD PTR [esi+eax]
	xor	DWORD PTR [eax], edx
	add	eax, 4
	dec	ecx
	jne	SHORT $LL13@kuz_encryp
; Line 213
	inc	edi
	add	esi, 16					; 00000010H
	cmp	edi, 10					; 0000000aH
	je	SHORT $LN27@kuz_encryp
; Line 214
	mov	eax, DWORD PTR _key$[ebp]
	push	ecx
	push	ebx
	call	_kuz_subbytes
; Line 215
	push	0
	call	_kuz_lt
	add	esp, 12					; 0000000cH
; Line 216
	jmp	SHORT $LL7@kuz_encryp
$LN8@kuz_encryp:
; Line 218
	push	10					; 0000000aH
	pop	edi
	add	esi, 160				; 000000a0H
$LL3@kuz_encryp:
; Line 221
	push	4
	dec	edi
	sub	esi, 16					; 00000010H
	mov	eax, ebx
	pop	ecx
; Line 222
$LL18@kuz_encryp:
	mov	edx, DWORD PTR [esi+eax]
	xor	DWORD PTR [eax], edx
	add	eax, 4
	dec	ecx
	jne	SHORT $LL18@kuz_encryp
; Line 223
	test	edi, edi
	je	SHORT $LN27@kuz_encryp
; Line 224
	push	DWORD PTR _enc$[ebp]
	call	_kuz_lt
; Line 225
	push	DWORD PTR _enc$[ebp]
	mov	eax, DWORD PTR _key$[ebp]
	push	ebx
	call	_kuz_subbytes
	add	esp, 12					; 0000000cH
; Line 226
	jmp	SHORT $LL3@kuz_encryp
$LN27@kuz_encryp:
	pop	edi
	pop	esi
	pop	ebx
; Line 228
	pop	ebp
	ret	0
_kuz_encrypt ENDP
_TEXT	ENDS
END
